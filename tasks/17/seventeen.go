// Задача: Реализовать бинарный поиск встроенными методами языка.

//Поиск элемента в отсортированном массиве

// 1. Определение значения элемента в середине структуры данных. Полученное значение сравнивается с ключом.
// 2. Если ключ меньше значения середины, то поиск осуществляется в первой половине элементов, иначе — во второй.
// 3. Поиск сводится к тому, что вновь определяется значение серединного элемента в выбранной половине и сравнивается с ключом.
// 4. Процесс продолжается до тех пор, пока не будет найден элемент со значением ключа или не станет пустым интервал для поиска.

package main

import "fmt"

func binarySearch(array []int, key int) int {
	left, right := 0, len(array)-1

	for left <= right {
		middle := left + (right-left)/2

		if array[middle] == key {
			return middle
		} else if array[middle] < key {
			left = middle + 1
		} else {
			right = middle - 1
		}
	}

	return -1
}

func main() {
	arr := []int{0, 1, 2, 5, 6, 7, 12, 22}
	fmt.Println(binarySearch(arr, 22))
}
